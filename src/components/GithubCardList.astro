---
import GithubCard from "@components/GithubCard.astro";

const API_KEY = import.meta.env.API_KEY;

const repos = [
    "https://api.github.com/repos/OpenTabletDriver/OpenTabletDriver",
    "https://api.github.com/repos/serenity-rs/serenity",
    "https://api.github.com/repos/serenity-rs/poise",
    "https://api.github.com/repos/moth-rs/moth",
    "https://api.github.com/repos/jamesbt365/mothoxi.de",
    "https://api.github.com/repos/jamesbt365/PSSA",
    "https://api.github.com/repos/jamesbt365/BSoD",
    "https://api.github.com/repos/jamesbt365/DualActionBinds",
    "https://api.github.com/repos/osucord/events-bot",
];

const Projects = await Promise.all(
    repos.map(async (repo) => {
        const requestInit = {
            headers: new Headers({
                Accept: "application/vnd.github.v3+json",
                Authorization: `Bearer ${API_KEY}`,
            }),
        } satisfies RequestInit;
        return fetch(repo, requestInit)
            .then(async (r) => {
                if (!r.ok) {
                    const e = await r.text().catch(() => "Unknown Error");
                    throw new Error(
                        `Failed to fetch repo info for ${repo}: ${r.status} ${r.statusText}\n${e}`,
                    );
                }
                return r.json();
            })
            .catch((e) => {
                console.error(e);
                return null;
            });
    }),
);
---

<div>
    {Projects.map((data) => (data ? <GithubCard {...data} /> : null))}
</div>

<style>
    div {
        --cols: 3;
        display: grid;
        grid-template-columns: repeat(var(--cols), minmax(0, 1fr));
        gap: 0.45em;
    }

    @media screen and (max-width: 1400px) {
        div {
            --cols: 2;
        }
    }

    @media screen and (max-width: 1000px) {
        div {
            --cols: 1;
        }
    }
</style>
